{
    "openapi": "3.0.0",
    "info": {
        "title": "Challenge FSW 3 chapter 5",
        "description": "API description in Markdown.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api/v1/"
        }
    ],
    "paths": {
        "/shops": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of shops.",
                "description": "This is API for get all shop data",
                "responses": {
                    "200": {
                        "description": "Success get shops data"
                    }
                }
            },
            "post": {
                "tags": [
                    "Shops"
                ],
                "summary": "Success creaete shop",
                "description": "This is API for create new shop",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success create new shop",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "toko imam"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "bandung"
                                    },
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success create new Shop",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "toko imam"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "bandung"
                                                },
                                                "userId": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because name shop is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because shop name empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shops/{id}": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of shops by id.",
                "description": "This is API for get all shops data",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the user to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success get shops data"
                    }
                }
            },
            "put": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of shops by id.",
                "description": "This is API for put shops data by id",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the user to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Success login user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "toko ratih"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "brebes"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success put shops data by id"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of shops by id.",
                "description": "This is API for delete shops data by id",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the user to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success delete shops data by id"
                    }
                }
            }
        },
        "/shops/search": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of search shops.",
                "description": "This is API for get search shops data",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the shops to get",
                        "schema": {
                            "type": "string",
                            "example": "toko imam"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success get search shops data"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns a list of users.",
                "description": "This is API for get all users data",
                "responses": {
                    "200": {
                        "description": "Success get users data"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns a list of users.",
                "description": "This is API for get users data by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the user to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success get users data"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns a list of users.",
                "description": "This is API for put users data by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the user to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Success login user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "ratih"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "test1234"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success put users data by id"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns a list of users.",
                "description": "This is API for delete users data by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the user to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success delete users data by id"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Success creaete Users",
                "description": "This is API for create new users",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success create new users",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "ratih"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "test1234"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success create new Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "example": "ratih"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "test1234"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because name users is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because user name empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Success creaete Users",
                "description": "This is API for login users",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success login users",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "ratih"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "test1234"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success login Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "example": "ratih"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "test1234"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because name users is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because user name empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns a list of products.",
                "description": "This is API for get all product data",
                "responses": {
                    "200": {
                        "description": "Success products data"
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns a list of products.",
                "description": "This is API for get product data by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the product to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success products data by id"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns a list of edit product by id.",
                "description": "This is API for put product data by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the product to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Success login user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "avanza"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 1000
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shopId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success put product data by id"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns a list of delete product by id.",
                "description": "This is API for delete product data by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Numeric ID of the product to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success delete product data by id"
                    }
                }
            }
        },
        "/product/search": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns a list of search product.",
                "description": "This is API for get search products data",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the product to get",
                        "schema": {
                            "type": "string",
                            "example": "avanza"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success get search products data"
                    }
                }
            }
        },
        "/product/create": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Success creaete products",
                "description": "This is API for create new products",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success create new products",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "avanza"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 1000
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shopId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success create new Products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "avanza"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "stock": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "shopId": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because name product is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because product name empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "shops": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "toko imam"
                    },
                    "city": {
                        "type": "string",
                        "example": "bandung"
                    },
                    "userId": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "Users": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "rati"
                    },
                    "password": {
                        "type": "string",
                        "example": "test1234"
                    },
                    "role": {
                        "type": "string",
                        "example": "user"
                    }
                }
            },
            "Product": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "avanza"
                    },
                    "price": {
                        "type": "integer",
                        "example": 1000
                    },
                    "stock": {
                        "type": "integer",
                        "example": 1
                    },
                    "shopId": {
                        "type": "integer",
                        "example": 1
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerToken": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}